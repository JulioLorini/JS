Cursos Javascript módulo B:

Aula 4: 

Window. Gera uma janela de pop-up
Exemplos:
Window.confirm - janela de confirmação
Window.alert- janela de alerta
Window.prompt - formulario 
Sinal “="único significa “recebe"
Variável - var
Nomear cada var(ex: n1, n2, n3)
N1: 5 n2: 8,5 n3: 15
Variáveis não numerais são chamadas de string, então: s1, s2, s3
S1: "javascript" s2: 'curso em video' s3: `Guanabara`

Variaveis devem ter nomes, chamados de identificadores.
Começa com letra, $ ou _
Não pode começar com números
Símbolos, acentos, letras e números são utilizáveis
Não deve conter espaços
Não usar palavras reservadas(palavras ja utilizadas pelo js)

Abrir terminal partir do vscode(header da mesa)
Node para ativar o node
Usar typeof para ver qual o data type
Data types= number, string(palavras) e boolean(true e false).
Mais tipos: null, object, undefined, function

Quando o valor da variável for desconhecido ou vazio, usar 'null'
Definir variável: var n1 = 8 var n2 =7 - n1+n2 = 15


Aula 6:

Exemplo ex002:

Para utilizar a variável em um pop-up: window.alert(‘tananan, +var a ser utilizada) 

Deixar a variável fora das aspas para que não conste a palavra, mas sim o item da variável 

Para adicionar mais à frase: (var + ‘tananan’)

Exemplo ex003:

Var s= n1+n2
S não resultará em uma soma pois é uma adição de strings

Para converter de string para número = Number.parseInt(n) ou Number.parseFloat(n) ou apenas Number()
A última forma é a ideal, pois funciona das duas maneiras e é simplificado

Para converter número para string usar String(var)
Exemplo:
('A soma dos valores é’+ String(var))

Outro meio é usar a tag ${}, que precisa de crase(`) em vez de aspas

Exemplo ex004:

Outras tags são var.length - Mostra quantas letras a variável tem
var.toUpperCase()
var.toLoweCase()
Parênteses vazios para funcionamento do código

toFixed: var.toFixed(casas decimais desejadas de 0 a 100)

PARA TRANSFORMAR EM REAL:
var.toLocaleString('pt-BR', {style: 'currency', currency: ‘BRL'})
Euro: EUR Dólar: USD


Aula 7:

Operadores:

Aritméticos:

- * / % ** - Operadores binários
/ divisão real-números com virgula
% divisão inteira-divisão inteira, resto da divisão(para quando tem números com virgula
Ex:5/2=2.5. 5%2=1
** Potência - 5**2=25

Precedência: entre parênteses-potências-multiplicação, divisão e resto de divisão-soma e subtração

Atribuição:

Var a = 5+3 a=8
Var b = a%5 b=3
Var c= 5*b**2 c=45
Var d= 10-a/2 d=6
Var e= 6*2/d e=2
Var f= b%e+4/e 1+2 f=3

Auto-atribuições:

Quando a variável recebe a si mesma + numero podemos usar: n+=4, n-=5, n*=4, n/=2, n**=2, n%5=5

Var n+3
n=n+4
n=n-5
n=n*4
n=n/2
n=n**2
n=n%5

Incremento:

n=10
n— ou —n= 9
n++ ou ++n=11
Pré incremento: —n ++n mostra o número atualizado sem solicitar a variável
Pós incremento: n— n++ mostra o número antigo, para ver o resultado solicitar novamente a variável



Aula 8:

Relacionais:

> < >= <= == !=
== significa igual
!= significa diferente

5>2 = true
7<4 = false
8>=8 = true
9<=7 = false
5==5 = true
4!=4 = false

5==5 = true
5==‘5'= true(o js analisa se tem o mesmo valor, não o tipo)
5===‘5'= false(3 sinais de igual analisam o tipo, logo por ‘5'ser um string, é falso)
5===5 = true
5 != ‘5'= false
5 !== ‘5'= true( !== desigual restrito, quando analisar o tipo)

Lógicos:

! && ||
! - negação
True - false
False - true

&& - conjunção - seria “e"
True e true - true
True e false - false
False e true - false
False e false - false

|| - disjunção - seria "ou"

True e true - true
True e false - true
False e true - true
False e false - false

Exemplo: 5 > 8 && 8 > 5 == false
5 > 8 || 8 > 5 == true

Com && as duas afirmações precisam estar corretas, ja usando || apenas uma precisa estar correta

Idade >= 15 && idade <= 17 //a idade está entre 15 e 17?
Estado == ‘RJ' || estado == ‘SP' // o estado é RJ ou SP
Salário > 1500 && sexo !=‘M'

Precedencia: 
() ** /
> < >=
!
&&
||

Ordem nas expressões

Ternário:

? : sendo ? Para true e : para false
Exemplo: média = 6

media>7?'Aprovado':'Reprovado'
'Reprovado'
media +=2
8
media>7?'Aprovado':'Reprovado'
‘Aprovado’

Uso na prática:
Var idade = Number(window.prompt('Qual a sua idade?’))
Var t = idade>=18?’maior’:’menor'
Window.alert(‘Sua idade é ‘+ t +’que 18 anos’)

Javascript Módulo C 


Document Object Model- DOM
Árvore DOM
Manipular DOM

Aula 9:

Árvore DOM:
window: tudo dentro do js está no objeto window
Dentro do objeto window temos outros objetos.
Location:

Document:
HTML- dentro de html temos head e body - dentro de head temos meta e title
Dentro de body temos h1, p, div - dentro de p temos strong…

History:
Etc..

Sistema hierárquico, com Childs e parents, html é parent de head e body e assim vai

Qualquer desses elementos citados(tags etc) podem ser selecionados

Pode acessar os documentos por marca, ID, nome, classe e seletor

Exemplos ex005:

Quando tem mais de um objeto na mesma classe/nome usar marca ou nome, quando quiser selecionar um objeto ou a familia utilizar o ID

Por marca:
Var = getElementByTagName(‘tag desejada’)[tag especifica, começando em 0 para a primeira, 1 para a segunda etc]
window.document.write(‘aqui está a tag: ‘ + var.innerText)
Podendo mudar o estilo usando o comando: var.style.color = ‘cor desejada’

Por ID:
Var = getElementsById()

Por nome:
Var = getElementsByName()

Por classe:
Var = getElementsByClassName()

Por seletor:
Var = querySelector() ou querySelectorAll()
Quando for class usar div.msg, quando for id usar div#msg
Igual html


Aula 10:

Acompanhar com ex006.html e live server

Eventos DOM:

Existem vários eventos DOM, alguns deles são os de mouse:

mouseenter: quando o mouse entra na div
Mousemove: mover o mouse dentro da div
Mousedown: segurar o botão do mouse
Mouseup: soltar o botão do mouse
Click: clicar rapidamente
Mouseout: levar o mouse para fora da diva

Funções:

Blocos em js são delimitados por {}, um bloco fica dentro de uma function, que acompanha uma ação
Function ação(param){}

Podemos colocar as ações dentro do código HTML ou, de preferência, no script com addEventListener

IDENTIFICAR ERROS NO JS: USAR O INSPECIONAR DO GOOGLE, MOSTRARÁ UM PEQUENO X VERMELHO, AO CLICAR VAI APARECER A LINHA EM QUE O ERRO FOI DETECTADO

Olhar exercício ex007.html

Nele temos a configuração input de html, onde colocamos funções
Uma calculadora de soma
Cada valor precisa de uma variável, e o resultado da soma destes precisa de outra. Para transformar as variáveis em números precisamos disso: var = Number(var.value)


Javascript Módulo D 


Assuntos a serem tratados no módulo D

Condições simples
Condições compostas
Condições alinhadas
Condições múltiplas
Exercícios propostos


Aula 11:

Ex008 e ex009

Sequencias: 

Exemplo de sequencia:
1.Var n = 3
2.n += 2
3.window.alert(n)
4.n = 5

Não posso mudar a ordem, nem deixar de executar alguma etapa


Condições:

1.
2. Uma etapa que pode ter mais de um desfecho
3.a(condição chamada de if) 3.b(condição chamada de else)
If (condição) {true} else {false}
4.pode ser ou a ou b

Tipos de condição

Condição simples: Apenas if(condição){true}

Condição composta: if(condição){true}else{false}

Exemplos em: Ex009.html, ex009.js, ex010.html


Aula 12:

Condições aninhadas:
Mais de duas opções: elseif
if(cond1){
	bloco1
}else{
	if(cond2){
	  Bloco 2
	}else{
	  Bloco 3 - pode colocar outra condição
	}
}

Hora em tempo real, alguns el ifs

Ex011.js e ex012.js

Condição múltipla:

switch(expressão{
case valor 1:

break
case valor 2:

break
case valor 3:

break
default:

break
}

O break é necessário pois o switch irá selecionar um dos cases, ou o default, após selecionar ele vai jogar para fora do bloco quando achar o break, então cada case precisa de um break para o caso de ser selecionado
